name: CICD for Group 2 Chat Application
run-name: ${{ github.actor }} is running CICD for Group 2 Chat Application


on:
  workflow_dispatch:
    inputs:
      access_url:
        description: 'Access URL'
        required: true
        default: ''
  
# Define permissions for this workflow, which can be added at either the job or workflow level.      
permissions:
  id-token: write # This is required for requesting the JWT
  actions: read
  contents: read
  security-events: write


jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The jobs are triggered by a ${{ github.event_name }} event on ${{ github.event.pull_request.head.ref }} branch."

  # test for input value, to delete later
  show-access-url:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Show the access URL
        run: |
          echo "access_url=${{ github.event.inputs.access_url }}"
  
# Add ZAP scan using input access url

  deploy-to-stage:
    runs-on: ubuntu-latest
    needs: [ show-access-url, get-aws-info] # Update if other jobs are added
    name: Deploy to Staging Environment
    env:
      environment: ${{ needs.get-aws-info.outputs.environment }}
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # Syntax for accessing outputs from a reusable workflow is "needs.<reusable>.outputs.<output>".
          # role-to-assume: ${{ needs.get-aws-info.outputs.role_to_assume }}
          # aws-region: ${{ needs.get-aws-info.outputs.aws_region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
      - name: Get ECR URL from Terraform
        id: terraform-ecr
        working-directory: ./modules/ecr
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
          echo "ecr_url=$(terraform output -json | jq -r .repository_url.value)"
          echo "ecr_url=$(terraform output -json | jq -r .repository_url.value)" >> $GITHUB_OUTPUT
      - name: Create AWS ECS Fargate
        working-directory: ./environments/${{ env.environment }}
        id: terraform-ecs
        run: |
          terraform init
          terraform apply -auto-approve -var "image_name=${{ steps.terraform-ecr.outputs.ecr_url }}"
          echo "access_url=$(terraform output -json | jq -r .alb_hostname.value)"
          echo "access_url=$(terraform output -json | jq -r .alb_hostname.value)" >> $GITHUB_OUTPUT
      - name: Echo Access URL
        run: echo "The Access URL is http://${{ steps.terraform-ecs.outputs.access_url }}:8000"



  # Define the "get-aws-info" job, which uses a reusable workflow defined in another file. 
  get-aws-info:
    uses: ./.github/workflows/get-aws-info.yml